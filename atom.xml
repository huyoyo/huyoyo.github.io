<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[胡某某同学]]></title>
  <link href="http://huyoyo.github.io/atom.xml" rel="self"/>
  <link href="http://huyoyo.github.io/"/>
  <updated>2017-03-02T13:24:03+08:00</updated>
  <id>http://huyoyo.github.io/</id>
  <author>
    <name><![CDATA[胡某某同学啊]]></name>
    <email><![CDATA[hujieqiong@sjtu.edu.cn]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[产品：共享单车APP产品分析]]></title>
    <link href="http://huyoyo.github.io/blog/2017/03/01/appchan-pin-fen-xi/"/>
    <updated>2017-03-01T13:34:24+08:00</updated>
    <id>http://huyoyo.github.io/blog/2017/03/01/appchan-pin-fen-xi</id>
    <content type="html"><![CDATA[<h4>写在前面</h4>

<p>&emsp;大概从去年年底开始，校园内出现了一批小黄车的存在。后面才知道叫ofo共享单车，面向群体是学生，主要范围是校园。共享车辆的浪潮随着时间越吹越高，出现一波小绿车、摩拜单车等共享出行工具的app。共享单车的盛行给出行带来的方便，也契合“绿色、低碳、环保”这种新时代的slogan～</p>

<h4>ofo软件产品分析</h4>

<p>&emsp;ofo共享单车号称是全球第一个无桩共享单车出行平台，用户只需在微信服务号或者App输入车牌号就可以获得密码解锁用车。</p>

<p><strong>1.功能架构</strong></p>

<p>&emsp;app设计非常的简洁，首页最鲜明的一个button－立即用车。突出app的核心功能。</p>

<p><strong>1.1流程的模式</strong></p>

<div align=center>
![](http://ofw47ln5s.bkt.clouddn.com/IMG_1488.PNG?imageMogr2/thumbnail/!40p)
</div>


<p>功能模块：用户手机验证－押金缴纳－实名认证（or校园认证）-立即用车</p>

<p>使用模块：发现自行车－输入车牌号－获得密码开锁骑车－行程结束锁车－结算费用</p>

<p><strong>2.商业模式</strong></p>

<ul>
<li>ofo主要从校园起家，投放在校园。</li>
<li>走的是廉价路线，自行车的标准型号，大规模采购成本并不高，大概200/辆</li>
<li>高校学生人员多，需求量大。通过价格优惠、数量分布广等吸引用户流量，培养的潜在的社会人员用户市场</li>
<li>利用<strong>共享概念</strong>打造一个以出行便利的<strong>服务平台</strong>，以此为用户流量的入口，发展其它相关的app从而形成整体盈利的模式。比如ofo活动中心的入口与enjoy这个app联合打造的美食活动日，如果将这个进行扩展，还可以利用这个发展吃喝玩乐一整套的服务体系，形成盈利模式</li>
<li>对上游商户来说，ofo制作车辆的成本并不贵，ofo的发展带动自行车制造商的竞争模式，多方商家的加入带来价格优惠，从而降低运营中产品投入成本</li>
</ul>


<p><strong>3.用户体验</strong></p>

<p>优点:</p>

<pre><code>1.车身颜色醒目，亮黄色造成的视觉效果很好。
2.车身很轻巧，上下坡比较省力
3.使用价格便宜，校园认证用户0.5rmb/h，社会用户1rmb/h
</code></pre>

<p>缺点：</p>

<pre><code>1.由于车辆并没有装载GPS定位系统，通过前一位使用者行车记录去推算车辆的大致位置，因此地图定位找车的方式并不准确.
2.采取密码锁解锁的方式，一辆车只有固定的密码，车辆安全没保障
3.技术和设计bug改进慢，遵守规则通过道德去绑架并不理性
</code></pre>

<p><strong>4.摩拜单车与ofo对比</strong></p>

<p>&emsp;共享车辆中ofo竞争对手最大的应该是摩拜单车。摩拜单车当时推出面对的客户不一样，制定的中端以上的客户，例如都市白领等。所以从外观设计、宣传等都想体验出高端大气上档次的路线。但是ofo这种从校园包围城市的路线，给摩拜单车也带来一波的冲击力。</p>

<p><img src="http://ofw47ln5s.bkt.clouddn.com/%E5%AF%B9%E6%AF%94.png" alt="" /></p>

<p><strong>摩拜单车</strong>：定制型单车（押金）。从市场规划路线上看做的比ofo要完善，具备组织硬件生产到软件系统搭建能力，对产品细节不断打磨的能力。在决策方面更能做出恰当的取舍。虽然开发的周期长、成本高，市场回报率短期内看到的成效不明显。但从“2-7天工作日内完成退押金”，到实时退款；lite版本的推出，车辆增加车篮、行驶上下坡更省力的体验点增加，可以看到摩拜单车对用户的诚意。产品长期规划很稳定，技术上及时解决用户反馈的问题，这一点摩拜单车运营和管理更具有优势。</p>

<p><strong>ofo单车</strong>：传统型单车。更追求速度，追求更低成本。通过融资的推进，以及打下“一天一城”的口号，推大单车投放量去占据共享市场的比重。总的来说，ofo单车在长期发展规划下并没有打好基础，产品投入的风险会随着前期考虑的不足而逐步暴露出来，急需技术上对产品进行改进，降低产品维护成本。</p>

<p><strong>5.与政府之间矛盾，以及运营维护等问题的思考</strong></p>

<p>&emsp;共享单车无桩的特点－即停即走，减少用户找桩停靠的时间，更加的方便，但新闻报道中政府部门对共享单车施行锁车、拖走的情况层出不穷。政府部门给出回应是：使用者随意停靠位置，占据机动车行驶道路等，给车辆管理带来极其不便。这个问题在共享车辆的发展上必须要有合理的解决，才可以更好的发展。</p>

<p>1.分场景管理。在校园内，由于区域内范围小，同学素质相对较高。因此可以不用设立停车点。在城区等地方，可以参考原来政府部门实现的城市公用自行车的理念：线下设立一些停车桩（靠近公交车站停靠的地方比较合理），可以安装摄像头或者结合线上还车的功能。保障车辆不被乱停乱放，市民都可以有秩序的使用。</p>

<p>2.增加车身定位和联网的动态密码</p>

<p>3.完善车辆举报机制，现在ofo改进的车辆举报机制通过文字、图片等，还是需要人工审核举报信息。</p>

<p>4.定期投入用户市场调查，根据用户体验度和建议对产品进行改进。</p>

<p>5.投放和运维都应该注重。在监管方面派专门人员进行管理比较好，利用划区域分片的方式。分离管理员版本和用户使用版本，人员投入资本的增加也可降低产品使用寿命短、耗损大等问题。</p>

<p>6.车辆自身特性：轻便骑行、上坡省力、开解锁容易、座椅位置可调节；附件功能：有篮筐便于放置物品、定位找车容易、颜值高、安全性高</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RMP部署教程]]></title>
    <link href="http://huyoyo.github.io/blog/2017/02/02/rmpbu-shu/"/>
    <updated>2017-02-02T13:03:09+08:00</updated>
    <id>http://huyoyo.github.io/blog/2017/02/02/rmpbu-shu</id>
    <content type="html"><![CDATA[<p>RMP平台部署的目的是给研一小朋友做课程lab，实验室自己研发的一个平台，提供Restful的一些接口可以把lab中开发工作主要集中在前台，后台就交给RMP了。此教程贴上权当是纪录下配置的步骤，以及当单个项目崩的时候怎么一键重启！万能的重新部署>.&lt;</p>

<!--more-->


<h4>准备一台主机，可以是云虚拟机，本教程是在阿里云ubuntu12.04环境下实现</h4>

<h4>安装java8</h4>

<p><strong>下载oracle jdk8</strong></p>

<p>执行wget &ndash;header &ldquo;Cookie: oraclelicense=accept-securebackup-cookie&rdquo; <a href="http://download.oracle.com/otn-pub/java/jdk/8u73-b02/jdk-8u73-linux-x64.tar.gz">http://download.oracle.com/otn-pub/java/jdk/8u73-b02/jdk-8u73-linux-x64.tar.gz</a></p>

<p>ps：一定要带上&ndash;header，否则下载得到的不是压缩文件而只是网页</p>

<p><strong>解压安装</strong></p>

<p>mkdir -p /usr/lib/jvm                                                     <br/>
sudo mv jdk-8u73-linux-x64.tar.gz /usr/lib/jvm                            <br/>
cd /usr/lib/jvm                                                           <br/>
sudo tar xzvf jdk-8u73-linux-x64.tar.gz</p>

<p><strong>环境变量设置</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim ~/.bashrc </span></code></pre></td></tr></table></div></figure>


<p>在文件最后加入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_73                                   
</span><span class='line'>export JRE_HOME=${JAVA_HOME}/jre                                            
</span><span class='line'>export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib                         
</span><span class='line'>export PATH=${JAVA_HOME}/bin:$PATH </span></code></pre></td></tr></table></div></figure>


<p>保存退出vim编辑，使文件生效</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source ~/.bashrc</span></code></pre></td></tr></table></div></figure>


<p>查看java版本，判断是否安装成功</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java -version</span></code></pre></td></tr></table></div></figure>


<h4>安装mysql</h4>

<p><strong>apt-get下载安装</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get update
</span><span class='line'>apt-get install mysql-server
</span><span class='line'># 中间会要求输入mysqlroot用户的密码
</span><span class='line'># 成功后通过mysql -u root -p即可登录mysql</span></code></pre></td></tr></table></div></figure>


<p><strong>登录mysql后查看编码</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>show variables like '%character%'
</span><span class='line'># 可看到第三栏character_set_database编码格式不为utf8，需进行修改配置</span></code></pre></td></tr></table></div></figure>


<p><strong>修改编码</strong></p>

<p>退出mysql后执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /etc/mysql/my.cnf             
</span><span class='line'>[client]后增加  default-character-set  =  utf8
</span><span class='line'>[mysqld]后增加  character-set-server=utf8
</span><span class='line'> 一定要加在最后面
</span><span class='line'> # 编辑完成后重启mysql，在登录查看编码，第三个也变成utf8即成功</span></code></pre></td></tr></table></div></figure>


<p><strong>修改包最大容量限制</strong></p>

<p><a href="http://blog.csdn.net/fly0744/article/details/13623079">http://blog.csdn.net/fly0744/article/details/13623079</a></p>

<p><strong>设置远程连接</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>编辑/etc/mysql/my.cnf            
</span><span class='line'>注释一行bind address=127.0.0.1   
</span><span class='line'>重启mysql                        
</span><span class='line'>登录mysql  mysql -u root -p      
</span><span class='line'>进行授权操作 grant all privileges on *.* to root@"%" identified by "pas
</span><span class='line'>执行flush privileges; </span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>安装maven</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install mavne
</span><span class='line'>mvn --version # 查看是否安装成功</span></code></pre></td></tr></table></div></figure>


<h4>打包项目</h4>

<p><strong>克隆rmp和rmp-proxy项目到这台机器上，放在/root/RMP/下</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /root/RMP/rmp
</span><span class='line'>mvn install # 会多一个target文件夹，里面有一个rmp的war包
</span><span class='line'>cd /root/RMP/rmp-proxy
</span><span class='line'>mvn install # 会多一个target文件夹，里面有一个rmp-proxy的war包</span></code></pre></td></tr></table></div></figure>


<h4>安装启动glassfish4.1(一定要是4.1)</h4>

<p><strong>下载glassfish</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /root
</span><span class='line'>wget http://download.java.net/glassfish/4.1/release/glassfish-4.1.zip
</span><span class='line'>unzip glassfish-4.1.zip</span></code></pre></td></tr></table></div></figure>


<p><strong>添加adadmin到环境变量</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim ~/.bashrc
</span><span class='line'># 在文件最后添加
</span><span class='line'>export GLASS=/root/glassfish4
</span><span class='line'>export PATH=${GLASS}/bin:$PATH</span></code></pre></td></tr></table></div></figure>


<p><strong>启动glassfishdomain</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/asadmin start-domain</span></code></pre></td></tr></table></div></figure>


<p><strong>部署项目</strong></p>

<p>第一次部署项目的话:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/asadmin deploy --name rmp-proxy --contextroot / ~/RMP/rmp-proxy/target/RMP-proxy-1.0/
</span><span class='line'>bin/asadmin deploy --name rmp --contextroot RMP ~/RMP/rmp/target/RMP-2.4/</span></code></pre></td></tr></table></div></figure>


<p>部署过重新部署的话:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/asadmin redeploy --name rmp-proxy
</span><span class='line'>bin/asadmin redeploy --name rmp</span></code></pre></td></tr></table></div></figure>


<p><strong>创建数据库</strong></p>

<p>新建一个叫rmp、一个叫rmpdata的数据库</p>

<p>访问rmp网站，rmp数据库中表会自动创建</p>

<p>然后找到rmp数据库中的db_server表，插入一条记录。url为网站对应的rmp项目所在url及端口，如<a href="http://112.74.62.114:8080/">http://112.74.62.114:8080/</a></p>

<p> <img src="http://ofw47ln5s.bkt.clouddn.com/sqlExp.jpg" alt="" /></p>

<p><strong>单个项目crash后部署指令</strong></p>

<p>通过asadmin deploy &ndash;name ［单个id<em>项目名称］&ndash;contextroot [单个id</em>单个项目名称] ~/RMP/[项目id]/[项目名称]/&hellip;(tab键提示补全)</p>

<p> <img src="http://ofw47ln5s.bkt.clouddn.com/redeployExp.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[javaScript读书笔记(一)]]></title>
    <link href="http://huyoyo.github.io/blog/2017/01/26/javascriptdu-shu-bi-ji-%5B%3F%5D/"/>
    <updated>2017-01-26T12:08:03+08:00</updated>
    <id>http://huyoyo.github.io/blog/2017/01/26/javascriptdu-shu-bi-ji-[?]</id>
    <content type="html"><![CDATA[<p>虽然写过一点前端的项目，但是一直在别人搭好的框架上进行coding。前端知识并不好，基础不牢总是要付出代价的TT.从头开始补基础，从javaScript开始。<!--more--></p>

<h4>设计意图</h4>

<p>javaScript最初设计意图就是为了在浏览器端中载入的Web页面和位于服务器上的应用程序之间提供脚本化的接口。</p>

<h4>阅读书目</h4>

<p>《javaScript学习指南》</p>

<h4>基础知识摘要</h4>

<p>最好保持脚本位置的一致性，要么全部放在head元素中，要么全部放在body元素的最末尾处</p>

<p>常见事件处理程序</p>

<pre><code>onclick     点击事件
onmouseover 当鼠标停留在某元素上触发
onmousemout 当鼠标离开某元素时触发
onfocus     当某元素获得焦点时触发
</code></pre>

<ul>
<li>document对象的所有目的时呈现整个页面，包括页面中的所有元素；</li>
<li>脚本引用example：<script type="text/javascript" src="test.js"></script></li>
<li>转义符 反斜杠 \</li>
<li>对于非ascii码－－encodeURI/encodeURIComponent对字符串进行编码，转换成URIencoding字符（decodeURI/decodeURIComponent）</li>
<li><code>双重否定符</code>（!!）可以用来显示地将数字或字符串转换为布尔值</li>
<li>javascript<code>除法</code>得到的结果是浮点型数字</li>
</ul>


<h4>Boolean对象</h4>

<ul>
<li><code>Boolean对象</code>实例，对象初始值为<code>空字符串</code>时候则对象的初始值将为<code>fasle</code>,任何<code>非空字符串</code>创建boolean对象实例初始值为<code>true</code>.</li>
</ul>


<h4>String对象</h4>

<ul>
<li>常用方法</li>
</ul>


<table>
        <tr>
            <th>方法</th>
            <th>描述</th>
            <th>参数</th>
          </tr>
        <tr>
            <th>contact</th>
            <th>连接字符串</th>
            <th>字符串参数，把该字符串连接到string对象的字面量字符串</th>
        </tr>
        <tr>
            <th>split</th>
            <th>根据特定的分割符，字符串分割</th>
            <th>分割符和分割最大数目</th>
                 </tr>
        <tr>
            <th>slice</th>
            <th>返回字符串的某个片段</th>
            <th>该片段的起始和结束位置</th>
                  </tr>
                    <tr>
            <th>toLowerCase
            toUpperCase</th>
            <th>大小写转换</th>
            <th>无</th>
                  </tr>
    </table>


<h4>正则表达式和RegExp</h4>

<ul>
<li>RegExp方法：test匹配考虑大小写，加i则忽略大小写,g表示全局匹配 /xxx/ig exec返回结果是一个数组，并存储圆括号包含的子字符串</li>
<li>＊表示前面*字符出现零次或多次；+前面字符出现一次或多次；？字符出现0次或1次；.表示字符只出现一次;^脱字符［<sup>0</sup>-9］表示非数字字符; ^和$表示一行的开始和结束;\w匹配任何数字字母字符，包括下划线[A-Za-z0-9];｜表示可以选择;｛｝表示前面字符重复的次数</li>
</ul>


<h4>FIFO队列</h4>

<pre><code>shift方法   移除数组第一个元素 
unshift方法 将元素添加到数组开
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于专利的杂想]]></title>
    <link href="http://huyoyo.github.io/blog/2016/10/17/post-title/"/>
    <updated>2016-10-17T16:21:47+08:00</updated>
    <id>http://huyoyo.github.io/blog/2016/10/17/post-title</id>
    <content type="html"><![CDATA[<h3>基于农业的本体知识库构建</h3>

<ul>
<li><p>应用场景</p>

<blockquote><p>来源于一个农产品的网页上架的，自动填写信息的启发</p>

<p>例如：拿到一个土豆，通过图像识别出这个产品是土豆（可能需要添加几个标签去区分是土豆而不是地瓜）</p>

<p>已经构建好的一个大的语义网,根据土豆这个词去search这个专有领域本体库中于这个相关连的概念（种类，功能，种植季节等）</p>

<p>服务反馈？－－按照概念（以标签的形式表示，供给用户选择）反馈信息，填写好对应的内容，并且做一次相关度推荐<!--more--></p></blockquote></li>
<li><p>流程描述</p>

<ol>
<li>网页抽取相对应的文本知识（wiki百科）得到本体中的概念</li>
<li>概念融合－1.依据相似度进行融合，设置经验阈值 2.本体推理－去找出关系，建立层级结构（树状或者网状）</li>
<li>得到基于农产品专有领域的语义网
<img src="http://ofw47ln5s.bkt.clouddn.com/16-10-31/1595354.jpg" alt="构造" /></li>
</ol>
</li>
<li><p>reference</p></li>
</ul>


<p> <img src="http://ofw47ln5s.bkt.clouddn.com/16-10-31/76112436.jpg" alt="农业本体和融合规则的知识融合框架" />
 <img src="http://ofw47ln5s.bkt.clouddn.com/16-10-31/59209975.jpg" alt="框架图" />
 <img src="http://ofw47ln5s.bkt.clouddn.com/16-10-31/32477478.jpg" alt="参考模型" /></p>

<ul>
<li><p>website</p>

<ol>
<li><a href="http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5659203">自适应提取方法</a></li>
<li><a href="http://www.cas.stc.sh.cn/jsjyup/pdf/2014/8/%E5%9F%BA%E4%BA%8E%E6%96%87%E7%8C%AE%E7%9A%84%E5%86%9C%E4%B8%9A%E9%A2%86%E5%9F%9F%E6%9C%AC%E4%BD%93%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E6%96%B9%E6%B3%95%E7%A0%94%E7%A9%B6.pdf">基于文献的农业领域本体自动构建方法</a></li>
<li><a href="http://disi.unitn.it/~p2p/RelatedWork/Matching/Ge_SKG'08.pdf">Concept Similarity Matching Based on Semantic
Distance</a></li>
<li><a href="http://dl.ifip.org/db/conf/ifip12/ccta2012-1/JiangZYX12.pdf">method</a></li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
